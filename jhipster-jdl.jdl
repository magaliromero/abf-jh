enum EstadosPagos{
 	PAGADO(Pagado)
    ANULADO(Anulado)
    PENDIENTE(Pendiente)
}
enum EstadosPersona{
	 ACTIVO(Activo),
  	 INACTIVO(Inactivo)
}
enum TipoFuncionarios{
	PROFESORES(Profesores)
    FUNCIONARIOS(Funcionarios)
    OTRO(Otro)
}
enum Niveles{
	PREAJEDREZ("Pre-Ajedrez")
    INICIAL(Inicial)
    PRINCIPIANTE(Principiante)
    INTERMEDIO(Intermedio)
    AVANZADO(Avanzado)
    TODOS("Todos los niveles")
}
entity TiposDocumentos(tipos_documentos){
	codigo String required,
    descripcion String required
}

entity Alumnos(alumnos){
	elo Integer,
    fideId Integer,
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String,
	telefono String required,
	fechaNacimiento LocalDate  required,
	documento String required,
    estado EstadosPersona required
}

entity Funcionarios(funcionarios){
	elo Integer,
    fideId Integer,
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String required,
	telefono String required,
	fechaNacimiento LocalDate  required,
	documento String required,
    estado EstadosPersona required,
    tipoFuncionario TipoFuncionarios
}

entity Temas(temas){
	titulo String required,
    descripcion String required
}

entity MallaCurricular(malla_curricular){
	titulo String required
    nivel Niveles required,
}

entity Matricula(matricula){
	fechaInscripcion  LocalDate  required
    fechaInicio  LocalDate  required
    fechaPago LocalDate
    estado EstadosPagos required
}

entity RegistroClases(registro_clases){
	fecha LocalDate  required
    cantidadHoras Integer required
    asistenciaAlumno Boolean
   
}

enum TiposPagos{
 	CUOTA(Cuota)
    MENSUAL(Mensual)
    DIARIO(Diario)
    UNICO (Unico) 
}

entity Pagos(pagos){
    montoPago Integer required,
    montoInicial Integer required,
    saldo Integer required,
	fechaRegistro LocalDate  required,
    fechaPago LocalDate required,
    tipoPago TiposPagos required,
    descripcion String required,
}
entity Cobros(cobros){
    montoPago Integer required,
    montoInicial Integer required,
    saldo Integer required,
	fechaRegistro LocalDate  required,
    fechaPago LocalDate required,
    tipoPago TiposPagos required,
    descripcion String required,
}

entity Usuarios(usuarios){
    documento Integer required,
    idRol Integer required
}

entity Prestamos(prestamos){
    fechaPrestamo LocalDate required,
    vigenciaPrestamo Integer required,
    fechaDevolucion LocalDate required
}
enum TiposTorneos{
 	INTERNO(Interno)
    NACIONAL(Nacional)
    INTERNACIONAL(Internacional) 
}
entity Torneos(torneos){
    nombreTorneo String required,
    fechaInicio LocalDate required,
    fechaFin  LocalDate required,
    lugar String required,
    tiempo String,
    tipoTorneo TiposTorneos required,
    torneoEvaluado Boolean required,
    federado Boolean required,
}

enum EstadosMateriales{
 	DISPONIBLE(Disponible)
    PRESTADO("En Prestamo")
    VENCIDO("No devuelto") 
}

entity Materiales(materiales){
	descripcion String required,
    estado EstadosMateriales required, 
    cantidadStock Integer required,
    cantidadPrestamo Integer required,
}

entity FichaPartidasTorneos(fichas){
	nombreContrincante String,
    duracion Integer,
    winner String,
    resultado String,
    comentarios String,
    nombreArbitro String,
}

entity Cursos(cursos){
	nombreCurso String,
}


enum TiposEvaluaciones{
 	FINAL(Final)
    ACUMULATIVA(Acumulativa)
    FORMATIVA(Formativa) 
}

entity Evaluaciones (evaluaciones){
    tipoEvaluacion TiposEvaluaciones required,
    idExamen Integer,
    idActa Integer, 
    fecha LocalDate required,
    puntosLogrados Integer,
    porcentaje Integer,
    comentarios String,

}

entity Inscripciones (inscripciones){
    fecha LocalDate,
}


relationship OneToMany {
	TiposDocumentos to Alumnos { tipoDocumentos(descripcion) required },
    TiposDocumentos to Funcionarios { tipoDocumentos(descripcion) required },
    Alumnos to Matricula  { alumnos(nombreCompleto) required },
    MallaCurricular to RegistroClases{mallaCurricular(titulo) required},
    Temas to RegistroClases{temas(titulo) required},
    Funcionarios to RegistroClases{funcionarios(nombreCompleto) required},
    Alumnos to RegistroClases {alumnos(nombreCompleto) required},
    Alumnos to Cobros {alumnos(nombreCompleto) required},
    Funcionarios to Pagos {funcionarios(nombreCompleto) required},
    Alumnos to Evaluaciones{alumnos(nombreCompleto) required}
    Alumnos to Inscripciones  { alumnos(nombreCompleto) required },
    Torneos to FichaPartidasTorneos {torneos (nombreTorneo) required},
    Materiales to Prestamos {Materiales(descripcion)},
}

relationship ManyToMany{

	MallaCurricular {temas(titulo) required} to Temas{mallaCurricular(titulo) required} 
}

 


service all with serviceClass
service all with serviceImpl
paginate all with pagination
filter all






