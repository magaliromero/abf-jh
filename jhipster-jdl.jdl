


enum EstadosPagos{
 	PAGADO(Pagado)
    ANULADO(Anulado)
    PENDIENTE(Pendiente)
}
enum EstadosPersona{
	 ACTIVO(Activo),
  	 INACTIVO(Inactivo)
}

enum CondicionVenta {
	CONTADO(Contado)
    CREDITO(Credito)
}
enum TipoProductos {
	PRODUCTO(Producto)
    SERVICIO(Servicio)
}
enum TipoFuncionarios{
	PROFESORES(Profesores)
    FUNCIONARIOS(Funcionarios)
    OTRO(Otro)
}
enum Niveles{
	PREAJEDREZ("Pre-Ajedrez")
    INICIAL(Inicial)
    PRINCIPIANTE(Principiante)
    INTERMEDIO(Intermedio)
    AVANZADO(Avanzado)
    TODOS("Todos los niveles")
}

enum EstadosPrestamos{
 	DEVUELTO(Devuelto)
    PRESTADO("En Prestamo")
    VENCIDO("No devuelto") 
}

entity Temas(temas){
	titulo String required,
    descripcion String required,
	nivel Niveles required,
}

entity RegistroClases(registro_clases){
	fecha LocalDate  required
    cantidadHoras Integer required
    asistenciaAlumno Boolean
}

entity TiposDocumentos(tipos_documentos){
	codigo String required,
    descripcion String required
}

entity Alumnos(alumnos){
	elo Integer,
    fideId Integer,
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String,
	telefono String required,
	fechaNacimiento LocalDate required,
	documento String required,
    estado EstadosPersona required
}

entity Funcionarios(funcionarios){
	elo Integer,
    fideId Integer,
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String required,
	telefono String required,
	fechaNacimiento LocalDate  required,
	documento String required,
    estado EstadosPersona required,
    tipoFuncionario TipoFuncionarios
}

entity Facturas(factura){
    fecha LocalDate required,
    facturaNro String required,
    timbrado Integer required,
    razonSocial String required,
    ruc String required,
    condicionVenta CondicionVenta required,
	total Integer required
}

entity FacturaDetalle(factura_detalle){
	cantidad Integer,
    precioUnitario Integer,
    subtotal Integer,
	porcentajeIva Integer,
	valorPorcentaje Integer
}

entity Pagos(pagos){
    fecha LocalDate required,
	total Integer required,
    cantidadHoras Integer required
}

entity Productos(productos){
    tipoProducto TipoProductos required,
	precioUnitario Integer required,
	porcentajeIva Integer required,
	descripcion String required
    
}


entity Materiales(materiales){
	descripcion String required,
    cantidad Integer,
    cantidadEnPrestamo Integer,
}


entity Prestamos(prestamos){
    fechaPrestamo LocalDate required,
    fechaDevolucion LocalDate,
	estado EstadosPrestamos required
}

entity Matricula(matricula){
	concepto String required
    monto Integer required
	fechaInscripcion  LocalDate  required
    fechaInicio  LocalDate  required
    fechaPago LocalDate
    estado EstadosPagos required
}

entity Evaluaciones (evaluaciones){
    nroEvaluacion Integer required
	fecha LocalDate required    
}

entity EvaluacionesDetalle(evaluaciones_detalle){
    comentarios String required
    puntaje Integer required
}
relationship OneToMany {
	Evaluaciones to EvaluacionesDetalle { Evaluaciones(nroEvaluacion) required }
    Alumnos to Evaluaciones{Alumnos(nombreCompleto) required}
    Funcionarios to Evaluaciones {Funcionarios(nombreCompleto) required}
    Temas to EvaluacionesDetalle { Temas(titulo) required}
}

relationship OneToMany {
	Productos to Pagos { producto(descripcion) required }
    Funcionarios to Pagos { funcionario(nombreCompleto) } 
}

relationship OneToMany {
	Alumnos to Matricula { alumno(nombreCompleto) required }
}

relationship OneToMany {
	Productos to FacturaDetalle { producto(descripcion) required }
}

relationship OneToMany {
	Facturas to FacturaDetalle{ factura(facturaNro) required }
}
relationship OneToMany{
	TiposDocumentos to Alumnos { tipoDocumentos(descripcion) required },
}
relationship OneToMany{
    TiposDocumentos to Funcionarios { tipoDocumentos(descripcion) required },
}

relationship OneToMany{
    Materiales to Prestamos {Materiales(descripcion) required},
}
relationship OneToMany{
 	Alumnos to Prestamos {alumnos(nombreCompleto) required},
}

relationship OneToMany{
 	Temas to RegistroClases {tema(descripcion) required},
    Funcionarios to RegistroClases { funcionario(nombreCompleto) }
}

service all with serviceClass
service all with serviceImpl
paginate all with pagination
filter all