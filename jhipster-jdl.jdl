enum EstadosPagos{
 	PAGADO(Pagado)
    ANULADO(Anulado)
    PENDIENTE(Pendiente)
}
enum EstadosPersona{
	 ACTIVO(Activo),
  	 INACTIVO(Inactivo)
}
enum TipoFuncionarios{
	PROFESORES(Profesores)
    FUNCIONARIOS(Funcionarios)
    OTRO(Otro)
}
enum Niveles{
	PREAJEDREZ("Pre-Ajedrez")
    INICIAL(Inicial)
    PRINCIPIANTE(Principiante)
    INTERMEDIO(Intermedio)
    AVANZADO(Avanzado)
    TODOS("Todos los niveles")
}
entity TiposDocumentos(tipos_documentos){
	codigo String required,
    descripcion String required
}

entity Personas(registro_clases){
    documento Integer required,
    nombreCompleto String required,
    direccion String required,
    fecha_nac LocalDate required,
    barrio String required,
    ciudad String required,
    telefono String required
}


entity Alumnos(alummos){
	elo Integer,
    fideId Integer,
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String,
	telefono String required,
	fechaNacimiento LocalDate  required,
	documento String required,
    estado EstadosPersona required
}

entity Funcionarios(funcionarios){
	elo Integer,
    fideId Integer,
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String required,
	telefono String required,
	fechaNacimiento LocalDate  required,
	documento String required,
    estado EstadosPersona required,
    tipoFuncionario TipoFuncionarios
}

entity Temas(temas){
	codigo String required,
    nombre_tema String required,
    descripcion String required
}

entity MallaCurricular(malla_curricular){
	titulo String required
    nivel Niveles required,
}

entity Matricula(matricula){
	fechaInscripcion  LocalDate  required
    fechaInicio  LocalDate  required
    fechaPago LocalDate
    estado EstadosPagos required
}

entity RegistroClases(registro_clases){
	fecha LocalDate  required
    cantidadHoras Integer required
    asistenciaAlumno Boolean
    //profesor 
    //alumno
    //tema
    //malla
}

entity Pagos(pagos){
    monto_pago float required,
    monto_inicial float required,
    saldo float required,
	fecha_registro LocalDate  required,
    fecha_pago LocalDate required,
    tipo_pago String required,
    descripcion String required,
    id_usuario_registro Integer required
}

entity Niveles(niveles){
    descripcion_nivel String required,
    estado Boolean required,
    id_examen Integer required,
    fecha_creacion LocalDate required,
    fecha_modificacion LocalDate required
}

entity Roles(roles){
    descripcion_rol String required,
    estado Boolean required,
    fecha_creacion LocalDate required,
    fecha_modificacion LocalDate required
}

entity Usuarios(usuarios){
    documento Integer required,
    id_rol Integer required
}

entity Prestamos(prestamos){
    fecha_prestamo LocalDate required,
    vigencia_prestamo Integer required,
    fecha_devolucion LocalDate required
}

entity Torneos(torneos){
    nombre_torneo String required,
    fecha_inicio LocalDate required,
    fecha_fin  LocalDate required,
    lugar String required,
    tiempo String,
    tipo_torneo String,
    torneo_evaluado Boolean required,
    federado Boolean required,
}


relationship OneToMany {
	TiposDocumentos to Alumnos { tipoDocumentos(descripcion) required },
    TiposDocumentos to Funcionarios { tipoDocumentos(descripcion) required },
    Alumnos to Matricula  { alumnos(nombreCompleto) required },
    MallaCurricular to RegistroClases{mallaCurricular(titulo) required},
    Temas to RegistroClases{temas(titulo) required},
    Funcionarios to RegistroClases{funcionarios(nombreCompleto) required},
    Alumnos to RegistroClases {alumnos(nombreCompleto) required},
    Alumnos to Pagos {alumnos(nombreCompleto) required},
    Pagos to Niveles {pagos(id_nivel) required} ,
    Pagos to Personas {pagos(id_persona) required},
    Pagos to Alumnos {pagos(id_nivel) required},
    Niveles to Alumnos {niveles(id_nivel) required},
    Niveles to Cursos {niveles(id_nivel) required},
    Personas to Alumnos {personas(documento) required}, 
    Personas to Pagos {personas(id_pago) required},
    Roles to Usuarios {roles(id_rol) required},
    Torneos to Fichas_partidas_torneos {torneos(id_torneo) required}
}

relationship ManyToMany{
	MallaCurricular {temas(titulo) required} to Temas{mallaCurricular(titulo) required} 
}

service all with serviceClass
service all with serviceImpl
paginate all with pagination
filter all






